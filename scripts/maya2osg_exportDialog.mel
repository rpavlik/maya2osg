// Copyright (C) 1997-2010 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.


global proc int osgFileExportOptions ( string $parent,
								   string $action,
								   string $initialSettings,
								   string $resultCallback )
//
//	Description:
//		This script posts the OSG file translator options.
//		The optionsString is of the form:
//			varName1=value1;varName2=value2;...
//
//	Parameters:
//		$parent - the elf parent layout for this options layout. It is
//					always a scrollLayout.
//		$action - the action that is to be performed with this invokation
//					of this proc. Valid options are:
//						"query" - construct the options string and pass it
//									to the resultCallback.
//						"post" - post all the elf controls.
//		$initialSettings - the current options string in effect at the
//						   time this script is invoked.
//		$resultCallback -
//				This is the proc to be called with the result string. 
//				resultCallback ( string $optionsString )
//
//	Returns:
//		1 if successfull.
//		0 otherwise.
//
{
	int		$bResult;
	string	$currentOptions;
	string	$optionList[];
	string	$optionBreakDown[];
	int		$index;

	if ($action == "post") {
		setParent $parent;
/*
		columnLayout -adj true objTypeCol;
		    string $on = (uiRes("m_objExportOptions.kOn"));
            string $off = (uiRes("m_objExportOptions.kOff"));
			radioButtonGrp
				-label (uiRes("m_objExportOptions.kGroups"))
				-nrb 2 -cw3 175 75 75
				-labelArray2 $on $off objGroups;
			radioButtonGrp
				-label (uiRes("m_objExportOptions.kPointGroups"))
				-nrb 2	-cw3 175 75 75
				-labelArray2 $on $off objPtGroups;
			radioButtonGrp
				-label (uiRes("m_objExportOptions.kMaterials"))
				-nrb 2	-cw3 175 75 75
				-labelArray2 $on $off objMaterials;
			radioButtonGrp
				-label (uiRes("m_objExportOptions.kSmoothing"))
				-nrb 2	-cw3 175 75 75
				-labelArray2 $on $off objSmoothing;
			radioButtonGrp
				-label (uiRes("m_objExportOptions.kNormals"))
				-nrb 2	-cw3 175 75 75
				-labelArray2 $on $off objNormals;
*/

	// Open a dialog for the selection of export options
	int $marginW = 15;
	int $marginH = 10;
	int $line_height = 25;
	
	$form = `formLayout -numberOfDivisions 100`;
		$frame_config = `scrollLayout -horizontalScrollBarThickness 0 -verticalScrollBarThickness 0 -childResizable true -minChildWidth 300`;
			columnLayout -adjustableColumn true;
				$frame_geometry = `frameLayout -label "Geometry" -collapsable true -marginWidth $marginW -marginHeight $marginH`;
					columnLayout;
						text -label "Single/double side surfaces:" -height $line_height;
						$maya2osg_bfcull = `radioButtonGrp -numberOfRadioButtons 3 -select 3 -label1 "all single" -label2 "all double" -label3 "keep state"`;
						if ( `upAxis -q -axis` == "y" ) {
							$maya2osg_yup2zup = `checkBox -label "Convert from Y-Up to Z-Up" -value true -height $line_height`;
						}
						setParent ..;
					setParent ..;
				$frame_textures = `frameLayout -label "Texturing" -collapsable true -marginWidth $marginW -marginHeight $marginH`;
					rowLayout -nc 2;
// 						rowLayout -nc 2;
// 							text -label "Image path" -enable false;
// 							textField -editable true -width 300 -enable false;
// 							setParent ..;
						columnLayout;
							text -label "Default mode: ";
							$maya2osg_texenv = `textScrollList -numberOfRows 3
								-allowMultiSelection false
								-append "DECAL"
								-append "MODULATE"
								-append "BLEND"
								-append "REPLACE"
								-append "ADD"
								-selectItem "MODULATE"`;
							setParent ..;
						columnLayout;
							text -label "Clamping: ";
							$maya2osg_texclamp = `textScrollList -numberOfRows 2
								-allowMultiSelection false
								-append "EDGE"
								-append "COLOR"
								-selectItem "COLOR"`;
							setParent ..;
						setParent ..;
					setParent ..;
				$frame_geometry = `frameLayout -label "Materials/shading" -collapsable true -marginWidth $marginW -marginHeight $marginH`;
					columnLayout;
						//text -label "Coming soon..." -height $line_height;
						$maya2osg_use_glsl = `checkBox -label "Build GLSL shaders" -value 0 -height $line_height`;
						setParent ..;
					setParent ..;
				$frame_geometry = `frameLayout -label "Lighting" -collapsable true -marginWidth $marginW -marginHeight $marginH`;
					columnLayout;
						$maya2osg_global_ambient = `colorSliderGrp -label "Global ambient color" -rgbValue 0 0 0`;
						$maya2osg_local_viewer = `checkBox -label "Local viewer" -value 1 -height $line_height`;
						$maya2osg_compute_shadows = `checkBox -label "Compute shadows" -value 1 -height $line_height`;
						text -label "Shadow technique: ";
						$maya2osg_shadow_technique = `textScrollList -numberOfRows 3
							-allowMultiSelection false
							-append "SHADOW_MAP"
							-append "SOFT_SHADOW_MAP"
							-append "SHADOW_VOLUME"
							-append "SHADOW_TEXTURE"
							-append "PARALLEL_SPLIT_SHADOW_MAP"
							-selectItem "SHADOW_MAP"`;
						setParent ..;
					setParent ..;
				$frame_geometry = `frameLayout -label "Animation" -collapsable true -marginWidth $marginW -marginHeight $marginH`;
					columnLayout;
						$maya2osg_export_anim = `checkBox -label "Export animations" -value 1 -height $line_height`;
						rowLayout -nc 2;
							text -label "Sample by: ";
							$maya2osg_anim_sampleby = `intField -minValue 1 -maxValue 100 -step 1 -value 1`;
							setParent ..;
						setParent ..;
					setParent ..;
				$frame_geometry = `frameLayout -label "Particles" -collapsable true -marginWidth $marginW -marginHeight $marginH`;
					columnLayout;
						$maya2osg_cbParticlesEmissive = `checkBox -label "Emissive particles"`;
						$maya2osg_cbParticlesLighting = `checkBox -label "Particles lighting"`;
						setParent ..;
					setParent ..;
				$frame_cameras = `frameLayout -label "Cameras" -collapsable true -marginWidth $marginW -marginHeight $marginH`;
					columnLayout;
						$maya2osg_cbDefaultCameras = `checkBox -label "Export default cameras"`;
						$maya2osg_cbOrthoCameras = `checkBox -label "Export orthographic cameras"`;
						setParent ..;
					setParent ..;
				setParent ..;
			setParent ..;
		$buttons = `formLayout  -numberOfDivisions 100`;
			$comm_export = "fileBrowserDialog -an \"Export as...\" -fc \"maya2osg_doExportGUI\" -ft \"osg\" -in \"OSG\" -m 1 -om \"ExportAll\";";
			$comm_export_and_preview = "fileBrowserDialog -an \"Export as...\" -fc \"maya2osg_doExportGUIAndPreview\" -ft \"osg\" -in \"OSG\" -m 1 -om \"ExportAll\";";
			$b1 = `button -label "Export" -align "center" -command $comm_export`;
			$b2 = `button -label "Export and Preview" -align "center" -command $comm_export_and_preview`;
			$b3 = `button -label "Cancel" -align "center" -command "deleteUI -window $maya2osg_export_win"`;
			formLayout -e
				-attachForm $b1 "top" 10
				-attachForm $b1 "left" 10
				-attachControl $b1 "right" 6 $b2
				-attachForm $b1 "bottom" 10

				-attachForm $b2 "top" 10
				-attachPosition $b2 "left" 6 33
				-attachControl $b2 "right" 6 $b3
				-attachForm $b2 "bottom" 10
				
				-attachForm $b3 "top" 10
				-attachPosition $b3 "left" 6 66
				-attachForm $b3 "right" 10
				-attachForm $b3 "bottom" 10
				$buttons;
			setParent ..;
		formLayout -e
			-attachForm $frame_config "top" 0
			-attachForm $frame_config "left" 0
			-attachForm $frame_config "right" 0
			-attachControl $frame_config "bottom" 0 $buttons
			-attachNone $buttons "top"
			-attachForm $buttons "left" 0
			-attachForm $buttons "right" 0
			-attachForm $buttons "bottom" 0
			$form;
		setParent ..;
                
                
/*                				
		// Now set to current settings.
		$currentOptions = $initialSettings;
		if (size($currentOptions) > 0) {
			tokenize($currentOptions, ";", $optionList);
			for ($index = 0; $index < size($optionList); $index++) {
				tokenize($optionList[$index], "=", $optionBreakDown);

				if ($optionBreakDown[0] == "groups") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 objGroups;
					} else {
						radioButtonGrp -e -sl 1 objGroups;
					}
				} else if ($optionBreakDown[0] == "ptgroups") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 objPtGroups;
					} else {
						radioButtonGrp -e -sl 1 objPtGroups;
					}
				} else if ($optionBreakDown[0] == "materials") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 objMaterials;
					} else {
						radioButtonGrp -e -sl 1 objMaterials;
					}
				} else if ($optionBreakDown[0] == "smoothing") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 objSmoothing;
					} else {
						radioButtonGrp -e -sl 1 objSmoothing;
					}
				} else if ($optionBreakDown[0] == "normals") {
					if ($optionBreakDown[1] == "0") {
						radioButtonGrp -e -sl 2 objNormals;
					} else {
						radioButtonGrp -e -sl 1 objNormals;
					}
				}
			}
		}
*/		
		
		$result = 1;
	
	}
/*	 
	else if ($action == "query") {

		if (`radioButtonGrp -q -sl objGroups` == 1) {
			$currentOptions = $currentOptions + "groups=1";
		} else {
			$currentOptions = $currentOptions + "groups=0";
		}

		if (`radioButtonGrp -q -sl objPtGroups` == 1) {
			$currentOptions = $currentOptions + ";ptgroups=1";
		} else {
			$currentOptions = $currentOptions + ";ptgroups=0";
		}

		if (`radioButtonGrp -q -sl objMaterials` == 1) {
			$currentOptions = $currentOptions + ";materials=1";
		} else {
			$currentOptions = $currentOptions + ";materials=0";
		}

		if (`radioButtonGrp -q -sl objSmoothing` == 1) {
			$currentOptions = $currentOptions + ";smoothing=1";
		} else {
			$currentOptions = $currentOptions + ";smoothing=0";
		}


		if (`radioButtonGrp -q -sl objNormals` == 1) {
			$currentOptions = $currentOptions + ";normals=1";
		} else {
			$currentOptions = $currentOptions + ";normals=0";
		}

		eval($resultCallback+" \""+$currentOptions+"\"");
		$result = 1;
	} 
*/	
	else {
		$bResult = 0;
	}

	return $bResult;
}
