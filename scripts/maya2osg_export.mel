//
//     Maya2OSG - A toolkit for exporting Maya scenes to OpenSceneGraph
//     Copyright (C) 2010 Javier Taibo <javier.taibo@gmail.com>
//     http://sourceforge.net/projects/maya2osg/
//
//     This file is part of Maya2OSG.
//
//     Maya2OSG is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as published by
//     the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     Maya2OSG is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with Maya2OSG.  If not, see <http://www.gnu.org/licenses/>.
//


/////////////////////////////////
// --- Utuility Procedures --- //
/////////////////////////////////

// Initialize Option Variables with default Values
proc initOptionVars()  {
	if ( !`optionVar -exists "maya2osg_bfcull"` ) 					optionVar -stringValue	"maya2osg_bfcull"					"KEEP" ;
	if ( !`optionVar -exists "maya2osg_yup2zup"` ) 				optionVar -intValue		"maya2osg_yup2zup"					( `upAxis -query -axis` == "y" ) ;

	if ( !`optionVar -exists "maya2osg_texenv"` ) 					optionVar -stringValue	"maya2osg_texenv" 					"MODULATE" ;
	if ( !`optionVar -exists "maya2osg_texclamp"` ) 				optionVar -stringValue	"maya2osg_texclamp"					"COLOR" ;

	if ( !`optionVar -exists "maya2osg_use_glsl"` ) 				optionVar -intValue		"maya2osg_use_glsl"					0 ;

	if ( !`optionVar -exists "maya2osg_global_ambient"` )
		optionVar -floatValueAppend "maya2osg_global_ambient" 0.0 -floatValueAppend "maya2osg_global_ambient" 0.0 -floatValueAppend "maya2osg_global_ambient" 0.0 ;

	if ( !`optionVar -exists "maya2osg_local_viewer"` ) 			optionVar -intValue		"maya2osg_local_viewer"				1 ;
	if ( !`optionVar -exists "maya2osg_compute_shadows"` ) 		optionVar -intValue		"maya2osg_compute_shadows"			1 ;
	if ( !`optionVar -exists "maya2osg_shadow_technique"` ) 		optionVar -stringValue	"maya2osg_shadow_technique"			"SHADOW_MAP" ;

	if ( !`optionVar -exists "maya2osg_export_anim"` ) 			optionVar -intValue		"maya2osg_export_anim"				1 ;
	if ( !`optionVar -exists "maya2osg_anim_transformType"` )		optionVar -stringValue	"maya2osg_anim_transformType"		"OSG_ANIMATION" ;
	if ( !`optionVar -exists "maya2osg_anim_sampleby"` ) 			optionVar -intValue		"maya2osg_anim_sampleby"			1 ;

	if ( !`optionVar -exists "maya2osg_cbParticlesEmissive"` ) 	optionVar -intValue		"maya2osg_cbParticlesEmissive"		0 ;
	if ( !`optionVar -exists "maya2osg_cbParticlesLighting"` ) 	optionVar -intValue		"maya2osg_cbParticlesLighting"		0 ;

	if ( !`optionVar -exists "maya2osg_cbDefaultCameras"` ) 		optionVar -intValue		"maya2osg_cbDefaultCameras"			0 ;
	if ( !`optionVar -exists "maya2osg_cbOrthoCameras"` ) 		optionVar -intValue		"maya2osg_cbOrthoCameras"			0 ;
}


// Delete all Option Vars, use this with initOptionVars to reset to default Values
proc removeOptionVars()  {
	optionVar
		-remove "maya2osg_bfcull"
		-remove "maya2osg_yup2zup"
		-remove "maya2osg_texenv"
		-remove "maya2osg_texclamp"
		-remove "maya2osg_use_glsl"
		-remove "maya2osg_global_ambient"
		-remove "maya2osg_local_viewer"
		-remove "maya2osg_compute_shadows"
		-remove "maya2osg_shadow_technique"
		-remove "maya2osg_export_anim"
		-remove "maya2osg_anim_transformType"
		-remove "maya2osg_anim_sampleby"
		-remove "maya2osg_cbParticlesEmissive"
		-remove "maya2osg_cbParticlesLighting"
		-remove "maya2osg_cbDefaultCameras"
		-remove "maya2osg_cbOrthoCameras" ;
}



global proc maya2osg_doExport(string $file, string $format)
{
	$command = "maya2osg";

	// If scene is Z-Up do nothing, if scene is Y-Up repeat last behaviour
	if ( `upAxis -q -axis` == "z" ) {
		$command += " -YUp2ZUp 0";
	}
	$command += " \"" + $file + "\";";
	eval($command);
}



global proc maya2osg_doExportGUIAndPreview(string $file, string $format)
{
	string $extension = fileExtension($file);
	string $filebasename = basename($file, "." + $extension);
	string $dirname = dirname($file);

	int $offs_x = 100;
	int $offs_y = 100;
	int $width = `getAttr defaultResolution.width`;
	int $height = `getAttr defaultResolution.height`;

	$options = " --window " + $offs_x + " " + $offs_y + " " + $width + " " + $height;

	string $camera_file_name = "";
	string $camera_shape[];
	$panel = `getPanel -withFocus`;
	// Compare the panel's type to confirm it is a "modelPanel"
	if ( "modelPanel" == `getPanel -to $panel` )
	{
		$camera = `modelEditor -q -camera $panel`;
		$camera_shape = `listRelatives -shapes $camera`;
		$camera_file_name = $filebasename + "_" + $camera_shape[0] + ".osg";
	}

	maya2osg_doExportGUI($file, $format);

	// If "current camera" was exported to OSG, then use it for preview
	if ( `filetest -r $camera_file_name` ) {
		$options += " -c " + $camera_file_name; // + " --noautohomeview";
	}

	print( "osgviewer " + $options + " " + $file);
	exec("osgviewer " + $options + " " + $file);
}



global proc maya2osg_doExportGUI(string $file, string $format)
{
	global string $maya2osg_export_win;

	string $command = "maya2osg" ;

	// TEXTURE
	$command += " -texenv "						+ `optionVar -query "maya2osg_texenv"` ;
	$command += " -texClampMode "				+ `optionVar -query "maya2osg_texclamp"` ;

	// CAMERAS
	$command += " -exportDefaultCameras "		+ `optionVar -query "maya2osg_cbDefaultCameras"` ;
	$command += " -exportOrthoCameras "		+ `optionVar -query "maya2osg_cbOrthoCameras"` ;

	// GEOMETRY
	$command += " -surfaceMode "				+ `optionVar -query "maya2osg_bfcull"` ;
	$command += " -YUp2ZUp "					+ ( ( `upAxis -query -axis` == "y" ) ? `optionVar -query "maya2osg_yup2zup"` : "0" ) ;

	// ANIMATION
	$command += " -exportAnim " 				+ `optionVar -query "maya2osg_export_anim"` ;
	$command += " -animTransformType "		+ `optionVar -query "maya2osg_anim_transformType"` ;
	$command += " -animSampleBy " 				+ `optionVar -query "maya2osg_anim_sampleby"` ;

	// PARTICLES
	$command += " -particlesEmissive " 		+ `optionVar -query "maya2osg_cbParticlesEmissive"` ;
	$command += " -particlesLighting " 		+ `optionVar -query "maya2osg_cbParticlesLighting"` ;

	// SHADOWS
	$command += " -computeShadows "			+ `optionVar -query "maya2osg_compute_shadows"` ;
	$command += " -shadowTechnique "			+ `optionVar -query "maya2osg_shadow_technique"` ;

	// LIGHTING
	float $ambient_color[] = 					  `optionVar -query "maya2osg_global_ambient"` ;
	$command += " -globalAmbient " 			+ $ambient_color[0] + " " + $ambient_color[1] + " " + $ambient_color[2] ;
	$command += " -localViewer " 				+ `optionVar -query "maya2osg_local_viewer"` ;

	// GLSL SHADERS
	$command += " -useGLSL "					+ `optionVar -query "maya2osg_use_glsl"` ;

	$command += " \"" + $file + "\" ; " ;
	//print( $command + "\n" ) ;
	eval( $command ) ;

	deleteUI -window $maya2osg_export_win ;
}



// Use this proceedur in fileDialog and custom window - alternative Layout
// set optionVar -intValue "maya2osg_uiType" 1
proc addFrameLayouts_optionMenu()
{
	int $marginW = 15;
	int $marginH = 10;
	int $line_height = 25;

	int $col1 = 100 , $col2 = 192 , $off2 = 8 ;

	string $command = "" ;

	columnLayout -adjustableColumn true ;
		// GEOMETRY
		frameLayout -label "Geometry" -collapsable true -marginWidth $marginW -marginHeight $marginH ;
			rowColumnLayout -numberOfColumns 2 -columnWidth 1 $col1 -columnWidth 2 $col2 -columnOffset 2 "left" $off2 ;
				text -align "right" -label "Surface Mode:" -height $line_height ;
				$command = "string $token[] ; tokenize #1 \"_\" $token ; optionVar -stringValue \"maya2osg_bfcull\" $token[0] ; " ;
				optionMenu -width $col2 -changeCommand $command maya2osgUI_bfcull ;
				menuItem -label "SINGLE_SIDED" ;
				menuItem -label "DOUBLE_SIDED" ;
				menuItem -label "KEEP_STATE" ;
				string $optionVar = `optionVar -query "maya2osg_bfcull"` ;
				optionMenu -edit -value ( $optionVar == "KEEP" ? $optionVar + "_STATE" : $optionVar + "_SIDED" ) maya2osgUI_bfcull ;

				if ( `upAxis -q -axis` == "y" ) {
					text -align "right" -label "Y-Up to Z-Up:" ;
					checkBox -label "" -height $line_height
						-value ( `optionVar -query "maya2osg_yup2zup"` )
						-changeCommand "optionVar -intValue \"maya2osg_yup2zup\" #1" ;
				}

				setParent.. ;

			setParent.. ;

		// TEXTURING
		frameLayout -label "Texturing" -collapsable true -marginWidth $marginW -marginHeight $marginH ;
			rowColumnLayout -numberOfColumns 2 -columnWidth 1 $col1 -columnWidth 2 $col2 -columnOffset 2 "left" $off2 ;
				text -align "right" -label "Default Mode:" ;
				optionMenu -width $col2 -changeCommand "optionVar -stringValue \"maya2osg_texenv\" #1" maya2osgUI_texenv ; // menuItem -value is stored in #1
				menuItem -label "DECAL" ;
				menuItem -label "MODULATE" ;
				menuItem -label "BLEND" ;
				menuItem -label "REPLACE" ;
				menuItem -label "ADD" ;
				optionMenu -edit -value ( `optionVar -query "maya2osg_texenv"` ) maya2osgUI_texenv ;

				text -align "right" -label "Clamping:" ;
				optionMenu -width $col2 -changeCommand "optionVar -stringValue \"maya2osg_texclamp\" #1" maya2osgUI_texclamp ; // menuItem -value is stored in #1
				menuItem -label "EDGE" ;
				menuItem -label "COLOR" ;
				optionMenu -edit -value ( `optionVar -query "maya2osg_texclamp"` ) maya2osgUI_texclamp ;

				setParent.. ;

			setParent ..;

		// MATERIALS / SHADING
		frameLayout -label "Materials / Shading" -collapsable true -marginWidth $marginW -marginHeight $marginH ;
			rowColumnLayout -numberOfColumns 2 -columnWidth 1 $col1 -columnWidth 2 $col2 -columnOffset 2 "left" $off2 ;
				//text -label "Coming soon..." -height $line_height;
				text -align "right" -label "Build GLSL Shaders:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_use_glsl"` )
					-changeCommand "optionVar -intValue \"maya2osg_use_glsl\" #1" ;
				setParent.. ;

			setParent.. ;

		// LIGHTING
		frameLayout -label "Lighting" -collapsable true -marginWidth $marginW -marginHeight $marginH ;
			rowColumnLayout -numberOfColumns 2 -columnWidth 1 $col1 -columnWidth 2 $col2 -columnOffset 2 "left" $off2 ;
				text -align "right" -label "Global Ambient:" ;
				float $color[3] = `optionVar -query "maya2osg_global_ambient"` ;
				$command  = "float $color[3] = `colorSliderGrp -query -rgbValue maya2osgUI_global_ambient` ;" ;
				$command += "optionVar -clearArray \"maya2osg_global_ambient\" ;" ;
				$command += "optionVar -floatValueAppend \"maya2osg_global_ambient\" $color[0] ; " ;
				$command += "optionVar -floatValueAppend \"maya2osg_global_ambient\" $color[1] ; " ;
				$command += "optionVar -floatValueAppend \"maya2osg_global_ambient\" $color[2] ; " ;
				colorSliderGrp -columnWidth2 ( $col2 / 4 ) ( 3 * $col2 / 4 )
					-rgbValue $color[0] $color[1] $color[2]
					-changeCommand $command maya2osgUI_global_ambient ;

				text -align "right" -label "Local Viewer:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_local_viewer"` )
					-changeCommand "optionVar -intValue \"maya2osg_local_viewer\" #1" ;

				text -align "right" -label "Compute shadows:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_compute_shadows"` )
					-changeCommand "optionVar -intValue \"maya2osg_compute_shadows\" #1" ;

				text -align "right" -label "Shadow Technique:" ;
				optionMenu -width $col2 -changeCommand "optionVar -stringValue \"maya2osg_shadow_technique\" #1" maya2osgUI_shadow_technique ; // menuItem -value is stored in #1
				menuItem -label "SHADOW_MAP" ;
				menuItem -label "SOFT_SHADOW_MAP" ;
				menuItem -label "SHADOW_VOLUME" ;
				menuItem -label "SHADOW_TEXTURE" ;
				menuItem -label "PARALLEL_SPLIT_SHADOW_MAP" ;
				optionMenu -edit -value ( `optionVar -query "maya2osg_shadow_technique"` ) maya2osgUI_shadow_technique ;

				setParent ..;

			setParent ..;

		// ANIMATION
		frameLayout -label "Animation" -collapsable true -marginWidth $marginW -marginHeight $marginH ;
			rowColumnLayout -numberOfColumns 2 -columnWidth 1 $col1 -columnWidth 2 $col2 -columnOffset 2 "left" $off2 ;
				text -align "right" -label "Export Animation:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_export_anim"` )
					-changeCommand "optionVar -intValue \"maya2osg_export_anim\" #1" ;

				text -align "right" -label "Transform Type:" ;
				optionMenu -width $col2 -changeCommand "optionVar -stringValue \"maya2osg_anim_transformType\" #1" maya2osgUI_anim_transformType ;
				menuItem -label "ANIMATION_PATH" ;
				menuItem -label "OSG_ANIMATION" ;
				optionMenu -edit -value ( `optionVar -query "maya2osg_anim_transformType"` ) maya2osgUI_anim_transformType ;

				text -align "right" -label "Sample by:" ;
				intSliderGrp -field true -minValue 1 -maxValue 100 -fieldMinValue 1 -fieldMaxValue 100 -columnWidth2 ( $col2 / 4 ) ( 3 * $col2 / 4 )
					-value ( ( int )`optionVar -query "maya2osg_anim_sampleby"` )
					-changeCommand "optionVar -stringValue \"maya2osg_anim_sampleby\" #1" ;

				// FOR LATER USAGE
	//			text -align "right" -label "Sample by:" ;
	//			floatField -precision 2 -minValue 0.1 -maxValue 100 -step 0.1 -value 1.0 maya2osgUI_anim_sampleby ;
	//			text -align "right" -label "Frames per Second:" ;
	//			floatField -precision 2 -minValue 1 -maxValue 300 -step 1 -value 1.0 maya2osgUI_anim_fps ;

				setParent.. ;

			setParent.. ;

		// PARTICLES
		frameLayout -label "Particles" -collapsable true -marginWidth $marginW -marginHeight $marginH ;
			rowColumnLayout -numberOfColumns 2 -columnWidth 1 $col1 -columnWidth 2 $col2 -columnOffset 2 "left" $off2 ;
				text -align "right" -label "Emissive Particles:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_cbParticlesEmissive"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbParticlesEmissive\" #1" ;

				text -align "right" -label "Particles Lighting:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_cbParticlesLighting"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbParticlesLighting\" #1" ;

				setParent.. ;

			setParent.. ;

		// CAMERAS
		frameLayout -label "Cameras" -collapsable true -marginWidth $marginW -marginHeight $marginH ;
			rowColumnLayout -numberOfColumns 2 -columnWidth 1 $col1 -columnWidth 2 $col2 -columnOffset 2 "left" $off2 ;
				text -align "right" -label "Default Cameras:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_cbDefaultCameras"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbDefaultCameras\" #1" ;

				text -align "right" -label "Ortho Cameras:" ;
				checkBox -label "" -height $line_height
					-value ( `optionVar -query "maya2osg_cbOrthoCameras"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbOrthoCameras\" #1" ;

				setParent.. ;

			setParent.. ;

		setParent.. ;

}

// Use this proceedur in fileDialog and custom window - original Layout
// set optionVar -intValue "maya2osg_uiType" 0, or remove the optionVar
proc addFrameLayouts_scrollList()
{
	int $marginW = 15;
	int $marginH = 10;
	int $line_height = 25;

	columnLayout -adjustableColumn true;
		frameLayout -label "Geometry" -collapsable true -marginWidth $marginW -marginHeight $marginH;
			columnLayout;
				text -label "Single/double side surfaces:" -height $line_height;
				string $optionVar = `optionVar -query "maya2osg_bfcull"`;
				radioButtonGrp -numberOfRadioButtons 3 -label1 "all single" -label2 "all double" -label3 "keep state"
					-onCommand1 "optionVar -stringValue \"maya2osg_bfcull\" \"SINGLE\" ;"
					-onCommand2 "optionVar -stringValue \"maya2osg_bfcull\" \"DOUBLE\" ;"
					-onCommand3 "optionVar -stringValue \"maya2osg_bfcull\" \"KEEP\" ;"
					-select ( $optionVar == "SINGLE" ? 1 : $optionVar == "DOUBLE" ? 2 : 3 ) ;
				if ( `upAxis -q -axis` == "y" ) {
					checkBox -label "Convert from Y-Up to Z-Up" -height $line_height
						-value ( `optionVar -query "maya2osg_yup2zup"` )
						-changeCommand "optionVar -intValue \"maya2osg_yup2zup\" #1" ;
				}
				setParent ..;
			setParent ..;
		frameLayout -label "Texturing" -collapsable true -marginWidth $marginW -marginHeight $marginH;
			rowLayout -nc 2;
// 						rowLayout -nc 2;
// 							text -label "Image path" -enable false;
// 							textField -editable true -width 300 -enable false;
// 							setParent ..;
				columnLayout;
					text -label "Default mode: ";
					textScrollList -numberOfRows 3
						-allowMultiSelection false
						-append "DECAL"
						-append "MODULATE"
						-append "BLEND"
						-append "REPLACE"
						-append "ADD"
						-selectCommand "optionVar -stringValue \"maya2osg_texenv\" `textScrollList -query -selectItem maya2osgUI_texenv` ; "
						-selectItem ( `optionVar -query "maya2osg_texenv"` ) maya2osgUI_texenv;
					setParent ..;
				columnLayout;
					text -label "Clamping: ";
					textScrollList -numberOfRows 2
						-allowMultiSelection false
						-append "EDGE"
						-append "COLOR"
						-selectCommand "optionVar -stringValue \"maya2osg_texclamp\" `textScrollList -query -selectItem maya2osgUI_texclamp` ; "
						-selectItem ( `optionVar -query "maya2osg_texclamp"` ) maya2osgUI_texclamp;
					setParent ..;
				setParent ..;
			setParent ..;
		frameLayout -label "Materials/shading" -collapsable true -marginWidth $marginW -marginHeight $marginH;
			columnLayout;
				//text -label "Coming soon..." -height $line_height;
				checkBox -label "Build GLSL shaders" -height $line_height
					-value ( `optionVar -query "maya2osg_use_glsl"` )
					-changeCommand "optionVar -intValue \"maya2osg_use_glsl\" #1" ;
				setParent ..;
			setParent ..;
		frameLayout -label "Lighting" -collapsable true -marginWidth $marginW -marginHeight $marginH;
			columnLayout;
				float $color[3] = `optionVar -query "maya2osg_global_ambient"` ;
				$command  = "float $color[3] = `colorSliderGrp -query -rgbValue maya2osgUI_global_ambient` ;" ;
				$command += "optionVar -clearArray \"maya2osg_global_ambient\" ;" ;
				$command += "optionVar -floatValueAppend \"maya2osg_global_ambient\" $color[0] ; " ;
				$command += "optionVar -floatValueAppend \"maya2osg_global_ambient\" $color[1] ; " ;
				$command += "optionVar -floatValueAppend \"maya2osg_global_ambient\" $color[2] ; " ;
				colorSliderGrp -label "Global ambient color"
					-rgbValue $color[0] $color[1] $color[2]
					-changeCommand $command maya2osgUI_global_ambient ;
				checkBox -label "Local viewer" -height $line_height
					-value ( `optionVar -query "maya2osg_local_viewer"` )
					-changeCommand "optionVar -intValue \"maya2osg_local_viewer\" #1" ;
				checkBox -label "Compute shadows" -height $line_height
					-value ( `optionVar -query "maya2osg_compute_shadows"` )
					-changeCommand "optionVar -intValue \"maya2osg_compute_shadows\" #1" ;
				text -label "Shadow technique: ";
				textScrollList -numberOfRows 3
					-allowMultiSelection false
					-append "SHADOW_MAP"
					-append "SOFT_SHADOW_MAP"
					-append "SHADOW_VOLUME"
					-append "SHADOW_TEXTURE"
					-append "PARALLEL_SPLIT_SHADOW_MAP"
					-selectCommand "optionVar -stringValue \"maya2osg_shadow_technique\" `textScrollList -query -selectItem maya2osgUI_shadow_technique` ; "
					-selectItem ( `optionVar -query "maya2osg_shadow_technique"` ) maya2osgUI_shadow_technique;
				setParent ..;
			setParent ..;
		frameLayout -label "Animation" -collapsable true -marginWidth $marginW -marginHeight $marginH;
			columnLayout;
				checkBox -label "Export animations" -height $line_height
					-value ( `optionVar -query "maya2osg_export_anim"` )
					-changeCommand "optionVar -intValue \"maya2osg_export_anim\" #1" ;
				optionMenuGrp -columnWidth2 82 220 -label "Transform Type" -changeCommand "optionVar -stringValue \"maya2osg_anim_transformType\" #1" maya2osgUI_anim_transformType ;
				menuItem -label "ANIMATION_PATH" ;
				menuItem -label "OSG_ANIMATION" ;
				optionMenuGrp -edit -value ( `optionVar -query "maya2osg_anim_transformType"` ) maya2osgUI_anim_transformType ;
				rowColumnLayout -nc 2;
					text -label "Sample by: ";
					intField -minValue 1 -maxValue 100 -step 1
						-value ( ( int )`optionVar -query "maya2osg_anim_sampleby"` )
						-changeCommand "optionVar -stringValue \"maya2osg_anim_sampleby\" #1" ;
					setParent ..;
				setParent ..;
			setParent ..;
		frameLayout -label "Particles" -collapsable true -marginWidth $marginW -marginHeight $marginH;
			columnLayout;
				checkBox -label "Emissive particles"
					-value ( `optionVar -query "maya2osg_cbParticlesEmissive"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbParticlesEmissive\" #1" ;
				checkBox -label "Particles lighting"
					-value ( `optionVar -query "maya2osg_cbParticlesLighting"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbParticlesLighting\" #1" ;
				setParent ..;
			setParent ..;
		frameLayout -label "Cameras" -collapsable true -marginWidth $marginW -marginHeight $marginH;
			columnLayout;
				checkBox -label "Export default cameras"
					-value ( `optionVar -query "maya2osg_cbDefaultCameras"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbDefaultCameras\" #1" ;
				checkBox -label "Export orthographic cameras"
					-value ( `optionVar -query "maya2osg_cbOrthoCameras"` )
					-changeCommand "optionVar -intValue \"maya2osg_cbOrthoCameras\" #1" ;
				setParent ..;
			setParent ..;
		setParent ..;
	}



proc maya2osg_options()
{
	global string $maya2osg_export_win;

	initOptionVars() ;

	// Open a dialog for the selection of export options
	if ( `window -exists $maya2osg_export_win` )
		deleteUI  -window $maya2osg_export_win ;

	$maya2osg_export_win = `window -title "Maya2OSG - Export options" -topLeftCorner 160 40 -widthHeight 360 540 -sizeable true` ;
	$form = `formLayout -numberOfDivisions 100`;
		$frame_config = `scrollLayout -horizontalScrollBarThickness 0 -verticalScrollBarThickness 0 -childResizable true -minChildWidth 300`;
			if ( `optionVar -query "maya2osg_uiType"` == 1 )		addFrameLayouts_optionMenu() ;
			else															addFrameLayouts_scrollList() ;

			setParent.. ;

		$buttons = `formLayout  -numberOfDivisions 100`;
			//$comm_export = "fileBrowserDialog -an \"Export as...\" -fc \"maya2osg_doExportGUI\" -ft \"osg\" -in \"OSG\" -m 1 -om \"ExportAll\";";
			$comm_export = "string $file[] = `fileDialog2 -fileFilter \"OSG (*.osg* )\" -dialogStyle 2` ; maya2osg_doExportGUI( $file[ 0 ] , \"osg\" ) ;" ;
			$comm_export_and_preview = "fileBrowserDialog -an \"Export as...\" -fc \"maya2osg_doExportGUIAndPreview\" -ft \"osg\" -in \"OSG\" -m 1 -om \"ExportAll\";";
			$b1 = `button -label "Export" -align "center" -command $comm_export`;
			$b2 = `button -label "Export and Preview" -align "center" -command $comm_export_and_preview`;
			$b3 = `button -label "Cancel" -align "center" -command "deleteUI -window $maya2osg_export_win"`;
			formLayout -e
				-attachForm $b1 "top" 10
				-attachForm $b1 "left" 10
				-attachControl $b1 "right" 6 $b2
				-attachForm $b1 "bottom" 10

				-attachForm $b2 "top" 10
				-attachPosition $b2 "left" 6 33
				-attachControl $b2 "right" 6 $b3
				-attachForm $b2 "bottom" 10

				-attachForm $b3 "top" 10
				-attachPosition $b3 "left" 6 66
				-attachForm $b3 "right" 10
				-attachForm $b3 "bottom" 10
				$buttons;
			setParent ..;
		formLayout -e
			-attachForm $frame_config "top" 0
			-attachForm $frame_config "left" 0
			-attachForm $frame_config "right" 0
			-attachControl $frame_config "bottom" 0 $buttons
			-attachNone $buttons "top"
			-attachForm $buttons "left" 0
			-attachForm $buttons "right" 0
			-attachForm $buttons "bottom" 0
			$form;
		setParent ..;

	showWindow $maya2osg_export_win;
}


global proc maya2osg_export( int $option_box ) {

	if ( !( `pluginInfo -query -loaded maya2osg` || `pluginInfo -query -loaded maya2osgd` ) )
		loadPlugin -quiet "maya2osg" ;
	// check if it successfully loaded
	if ( !( `pluginInfo -query -loaded maya2osg` || `pluginInfo -query -loaded maya2osgd` ) ) {
		error "Maya2OSG plug-in failed to load";
		return;
	}

	// Cleanup has been deactivated. It can be explicitly called
	// by the user from the shelf button "Cleanup scene".
//	maya2osg_cleanup();

	if ( $option_box ) {
		// Open the export options dialog
		maya2osg_options();
	}
	else {
		//fileBrowserDialog -an "Export as..." -fc "maya2osg_doExport" -ft "osg" -in "OSG" -m 1 -om "ExportAll";
		//fileDialog2 -fc "maya2osg_doExport" -ft "osg" -in "OSG" -m 1 -om "ExportAll";
		string $file[] = `fileDialog2 -fileFilter "OSG (*.osg* )" -dialogStyle 2` ;
		maya2osg_doExport( $file[ 0 ] , "osg" ) ;
	}
}


// File Dialog Script, just stub, WIP
global proc int osgFileExportOptions ( string $parent , string $action , string $initialSettings , string $resultCallback )
//
//	Description:
//		This script posts the OSG file translator options.
//		The optionsString is of the form:
//			varName1=value1;varName2=value2;...
//
//	Parameters:
//		$parent - the elf parent layout for this options layout. It is
//					always a scrollLayout.
//		$action - the action that is to be performed with this invokation
//					of this proc. Valid options are:
//						"query" - construct the options string and pass it
//									to the resultCallback.
//						"post" - post all the elf controls.
//		$initialSettings - the current options string in effect at the
//						   time this script is invoked.
//		$resultCallback -
//				This is the proc to be called with the result string.
//				resultCallback ( string $optionsString )
//
//	Returns:
//		1 if successfull.
//		0 otherwise.
//
{
	int		$bResult;
	string	$currentOptions;
	string	$optionList[];
	string	$optionBreakDown[];
	int		$index;

	if ($action == "post") {
		setParent $parent;

		// Open a dialog for the selection of export options
		if ( `optionVar -query "maya2osg_uiType"` == 1 )		addFrameLayouts_optionMenu() ;
		else															addFrameLayouts_scrollList() ;

		$result = 1;

	}

	else {
		$bResult = 0;
	}

	return $bResult;
}



/*
// Old way:
global proc int importImage( string $filename, string $fileType )
{
    file -import $filename;
    return 1;
}


fileBrowserDialog -m 0 -fc "importImage" -ft "image" -an "Import_Image" -om "Import";

//
// Recommended way:
string $filename[] = `fileDialog2 -fileMode 1 -caption "Import Image"`;
if (1 == `size($filename)`)
{
    importImage($filename[0], "");
}
*/
